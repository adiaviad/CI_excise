on:
  pull_request:
  
jobs:
  test:
    name: python test
    runs-on : ubuntu-latest
    env:
      log_Output: README.md
      temp_log: temp_log.txt
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install pytest
        run: pip install -U pytest

      - name: add date
        run: |
          echo -e "\n## ${{ github.event.pull_request.head.ref }} -> ${{ github.event.pull_request.base.ref }} __results from $(date +'%Y-%m-%d')__ " >> $log_Output

      

      # runs the test and puts the output in a temporary file that will not be tracked by git. used to put pytest's output after the status report
      - name: Run pytest
        run : pytest -q > $temp_log

      # add failure badge if the test failed
      - name: add test fail badge
        if  : failure()
        run : echo -e " ![Static Badge](https://img.shields.io/badge/test-fail-red)\n" >> $log_Output

      # add pass badge if the test didn't fail
      - name: add test pass badge
        if  : success()
        run : echo -e " ![Static Badge](https://img.shields.io/badge/test-pass-green)\n" >> $log_Output

      - name: config git
        if  : success() || failure()
        run : |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Actions"

      #the output log will be appended to the README.md in master so a checkout first is needed
      - name: checkout master
        if  : success() || failure()
        run : |
          git fetch
          git checkout master


      - name: append log to README
        if  : success() || failure()
        run : cat $temp_log >> $log_Output

      - name: commit logs
        if  : success() || failure()
        run : |
          git add $log_Output
          git commit -m "update $log_Output with results"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
